/*
 * consola.c
 *
 *  Created on: 21/4/2015
 *      Author: utnso
 */


#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "consola.h"


	int main (){
		int indiceComando;
		char* comandod = malloc (200) ;

	cargarComandos();


				printf("-------Comandos cargados------- \n");

	while(1)	{

		printf("Pedime lo que quieras>>>");

		fgets(comandod,200,stdin);



	 indiceComando = buscarComando(comandod);

			aplicarComando (indiceComando);




	}



return 0;
	}


void aplicarComando (int a){ //selecciona un case en base al numero que llevaba el contador


	switch (a)
	{
	case 1:
		printf("Esta es la funcion formatear \n");
		break;
	case 2:
		printf("Esta es la funcion eliminar \n");
				break;
	case 3:
		printf("Esta es la funcion renombrar \n");
				break;
	case 4:
		printf("Esta es la funcion mover \n");
				break;
	case 5:
		printf("Esta es la funcion crearD \n");
				break;
	case 6:
		printf("Esta es la funcion eliminarD \n");
				break;
	case 7:
		printf("Esta es la funcion renombrarD \n");
				break;
	case 8:
		printf("Esta es la funcion moverD \n");
				break;
	case 9:
		printf("Esta es la funcion copiar \n");
				break;
	case 10:
		printf("Esta es la funcion copiarFSL \n");
				break;
	case 11:
		printf("Esta es la funcion md5 \n");
				break;
	case 12:
		printf("Esta es la funcion verB \n");
				break;
	case 13:
		printf("Esta es la funcion borrarB \n");
				break;
	case 14:
		printf("Esta es la funcion copiarB \n");
				break;
	case 15:
		printf("Esta es la funcion agregarN \n");
				break;
	case 16:
		printf("Esta es la funcion eliminarN \n");
				break;
	case 17:
		mostrarComandos();
				break;
	case 18:
		printf("--Ojo ese comando no existe!! proba con --man\n");
	}


}

void cargarComandos (void){ //deben cargarse las funciones respetando los numeros del case
	  listaComandos [1].comandos = "formatear\n";
	  listaComandos [1].descripcion = "Funcion --formatear dir--";
	  listaComandos [2].comandos = "eliminar\n";
	  listaComandos [2].descripcion = "Funcion --eliminar dir/archv--";
	  listaComandos [3].comandos = "renombrar\n";
	  listaComandos [3].descripcion = "Funcion --renombrar dir/archv--";
	  listaComandos [4].comandos = "mover\n";
	  listaComandos [4].descripcion = "Funcion --mover dir/archv--";
	  listaComandos [5].comandos = "crearD\n";
	  listaComandos [5].descripcion = "Funcion --crearD dirNuevo--";
	  listaComandos [6].comandos = "eliminarD\n";
	  listaComandos [6].descripcion = "Funcion --eliminarD dir--";
	  listaComandos [7].comandos = "renombrarD\n";
	  listaComandos [7].descripcion = "Funcion --renombrarD dir dirNuevo";
	  listaComandos [8].comandos = "moverD\n";
	  listaComandos [8].descripcion = "Funcion --moverD dir Adir";
	  listaComandos [9].comandos = "copiar\n";
	  listaComandos [9].descripcion = "Funcion --copiar dir";
	  listaComandos [10].comandos = "copiarFSL\n";
	  listaComandos [10].descripcion = "Funcion --copiarFSL dir/archv dirFSlocal";
	  listaComandos [11].comandos = "md5\n";
	  listaComandos [11].descripcion = "Funcion --md5 dir/archv";
	  listaComandos [12].comandos = "verB\n";
	  listaComandos [12].descripcion = "Funcion --verB dir/archv(bloque)";
	  listaComandos [13].comandos = "borrarB\n";
	  listaComandos [13].descripcion = "Funcion --borrarB dir/archv(bloque)";
	  listaComandos [14].comandos = "copiarB\n";
	  listaComandos [14].descripcion = "Funcion --copiarB dir/archv(bloque)";
	  listaComandos [15].comandos = "agregarN\n";
	  listaComandos [15].descripcion = "Funcion --agregarN nombreNodo";
	  listaComandos [16].comandos = "eliminarN\n";
	  listaComandos [16].descripcion = "Funcion --eliminarN nombreNodo";
	  listaComandos [17].comandos = "man\n";
	  listaComandos [17].descripcion = "Funcion --manual de comandos(vamos boca)";
	  listaComandos [18].comandos ="\n";
}

int buscarComando(char* a){
	int cont = 0, r ;

	do{
		cont = cont + 1;
		r = strcmp(a, listaComandos [cont].comandos);

	}while((cont =< 18) && (r != 0));

	if (cont >= 17){

		return 18;
	}

return cont;
}
void mostrarComandos() {
	int cont2 = 0;
		do{
			printf("*------------------------------------------*\n");
			printf("COMANDO= %s",listaComandos [cont2].comandos);
			printf("DESCRIPCION= %s",listaComandos [cont2].descripcion);
			printf("*------------------------------------------*\n");

		}while(cont2<=17);
}
